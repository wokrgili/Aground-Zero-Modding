<?xml version="1.0" encoding="utf-8" ?>
<data>
    <structure id="subway" self="STRUCTURE" block="WORLD|STRUCTURE|BLUEPRINT|PLAYER|NPC|ENEMY|ITEM" static="true" access="none" subway="true">
		<shape type="convex_hull">
			<vertex x="-1.4" y="-4" z="0.051" />
			<vertex x="2.35" y="-4" z="0.051" />
			<vertex x="-1.4" y="4" z="0.051" />
			<vertex x="2.35" y="4" z="0.051" />
			<vertex x="-1.15" y="-4" z="0.25" />
			<vertex x="2.35" y="-4" z="0.25" />
			<vertex x="-1.15" y="4" z="0.25" />
			<vertex x="2.35" y="4" z="0.25" />
		</shape>
		<shape type="box" x="1.7" z="0.5" width="0.3" height="8" depth="0.5" />
        <shape type="box" x="2.35" z="2.5" width="0.3" height="8" depth="2.7" />
        <shape type="box" z="4.85" y="-2" width="1" height="2" depth="0.3" />
		<shape type="box" z="4.85" y="2" width="1" height="2" depth="0.3" />
		<infoInit>for(s in this.shapes) if(s.geometry._vertices == null) s.collisionGroup |= BLUEPRINT;</infoInit>
    </structure>
	<structure id="subway1" extends="subway" model="subway1">
		<shape type="box" x="-2.375" z="2.15" width="0.25" height="0.4" depth="2.9" /><!-- BOX A -->
	</structure>
	<structure id="subway2" extends="subway" model="subway2">
		<shape type="box" x="-2.4" z="0.775" y="-1.5" width="0.2" height="0.6" depth="1.55" /><!-- BOX B -->
	</structure>
	<structure id="subway3" extends="subway" model="subway3">
		<shape type="box" x="-2.4" z="1.65" y="-2.8" width="0.2" height="1.3" depth="1.3" /><!-- BOX C -->
	</structure>
	<structure id="subway4" extends="subway" model="subway4">
		<model id="subway_ad"><transform>
		matrix.setScale(2.25,1.265625,1); var b = new Basis(); b.tilt(-PI/2); b.roll(-PI/2); matrix.append(b.getMatrix());
		matrix.set(3,0,2.48); matrix.set(3,1,1.875); matrix.set(3,2,2.6);
		</transform></model>
		<model id="subway_ad"><transform>
		matrix.setScale(2.25,1.265625,1); var b = new Basis(); b.tilt(-PI/2); b.roll(-PI/2); matrix.append(b.getMatrix());
		matrix.set(3,0,2.48); matrix.set(3,1,-4.125); matrix.set(3,2,2.6);
		</transform></model>
		<init><script>
		var d = this.storage.get("ads"); function updateAds(e){
			var ads = d.getInt(); var i = ads&amp;0xf; var m = this.models[1]; m.texCrop.copy(m.renderable.texCrop);
			m.texCrop.x += 0.5*(i&amp;1); m.texCrop.y += 0.5*(i&gt;&gt;1);
			var i = (ads&gt;&gt;4)&amp;0xf; var m = this.models[2]; m.texCrop.copy(m.renderable.texCrop);
			m.texCrop.x += 0.5*(i&amp;1); m.texCrop.y += 0.5*(i&gt;&gt;1);
		} if(!d.hasData()) d.setInt(0); d.addEventListener("updated", updateAds); updateAds(null);
		</script></init>
	</structure>
	<structure id="subway5" extends="subway" model="subway5">
		<shape type="box" x="-2.4" z="3.05" y="-1.6" width="0.2" height="1" depth="0.47" /><!-- BOX D -->
	</structure>
	<structure id="subway6" extends="subway" model="subway6">
		<shape type="box" x="-2.425" z="1.65" y="2.17" width="0.15" height="1.3" depth="1.3" /><!-- FAN -->
	</structure>
	<structure id="subway7" extends="subway" model="subway7" />
	<structure id="subway8" extends="subway" model="subway8" />
</data>